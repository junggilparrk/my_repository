package day0409Ex;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.net.ServerSocket;
import java.net.Socket;

public class ThreadEx2 extends Thread{
	Socket socket=null;
	BufferedReader br=null;
	BufferedWriter bw=null;
	ServerSocket serverSocket=null;
	
	
	public ThreadEx2() {
		super();
		this.socket = socket;
		this.br = br;
		this.bw = bw;
		this.serverSocket = serverSocket;
	}
	
	public void getSocket(int portnum) {
			try {
				serverSocket=new ServerSocket(portnum);
				System.out.println("접속 대기중...");
				socket=serverSocket.accept();//엑셉트 진행후 클라이언트와 연결된 소켓을 반환
				
				System.out.println(">>>클라이언트 -"+socket.getInetAddress());
				System.out.println("접속 성공....");
				BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(),"utf-8"));
				BufferedReader br=new BufferedReader(new InputStreamReader(socket.getInputStream(),"utf-8"));
				
			} catch (IOException e) {
				e.printStackTrace();
			}finally {
				if(serverSocket!=null) {
					try {
						serverSocket.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
				if(socket!=null) {
					try {
						socket.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}if(bw!=null) {
					try {
						bw.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}if(br!=null) {
					try {
						br.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
				
				
				
			}
			
			 
			 
	}
	@Override
	public void run() {
		try {
			BufferedReader br=new BufferedReader(new InputStreamReader(socket.getInputStream(),"utf-8"));
			String msg=br.readLine();
			System.out.println(msg);
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}finally {
			if(br!=null) {
				try {
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		
	}

}
